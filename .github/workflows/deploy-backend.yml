name: Deploy Node.js App to EC2

on:
  push:
    branches:
      - dev # Deploy on pushes to the 'dev' branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4.0.2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Install Node.js and dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y nodejs npm 
          npm install

      - name: Build the application
        run: npm run build -w backend

      - name: Get Secret from Secrets Manager
        id: get_secret
        run: |
          aws secretsmanager get-secret-value --secret-id arn:aws:secretsmanager:eu-north-1:288761728287:secret:dev-ev2-private-key-Z5SZsC --query 'SecretString' --output text > private_key.pem

      - name: Verify Key Permissions
        run: |
          ls -l private_key.pem

      - name: Prepare SSH Environment
        run: |
          mkdir -p ~/.ssh
          touch ~/.ssh/known_hosts
          chmod 600 ~/.ssh/known_hosts

      - name: Remove Old Host Key Entry
        run: |
          ssh-keygen -R ${{ secrets.EC2_PUBLIC_IP }}

      - name: Test SSH Connection
        run: |
          ssh -i private_key.pem -o StrictHostKeyChecking=no ec2-user@${{ secrets.EC2_PUBLIC_IP }} 'echo "SSH Connection Successful"'

      - name: Copy files to EC2 instance
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_PUBLIC_IP }}
          username: ec2-user
          key: private_key.pem
          source: ./backend/dist/
          target: /home/ec2-user/app/

      - name: Start the application on EC2
        run: |
          ssh -i private_key.pem ec2-user@${{ secrets.EC2_PUBLIC_IP }} 'cd /home/ec2-user/app/ && npm start'
